{"version":3,"sources":["shared/store/constants/counter.constant.js","shared/store/selectors/user.selector.js","shared/store/selectors/weather.selector.js","shared/store/constants/user.constant.js","shared/store/actions/user.action.js","shared/store/constants/weather.constant.js","shared/store/actions/weather.action.js","pages/home/styled/Button.js","pages/home/styled/CitySubmit.js","pages/home/styled/WeatherInformation.js","pages/home/styled/BackgroundImage.js","pages/home/styled/CardWrapper.js","pages/home/index.js","App.js","shared/store/reducers/counter.reducer.js","shared/store/reducers/isLogged.reducer.js","shared/store/reducers/user.reducer.js","shared/store/reducers/weather.reducer.js","shared/store/reducers/index.js","shared/store/sagas/user.saga.js","shared/store/services/localStorage.service.js","shared/store/services/weather.service.js","shared/store/sagas/weather.saga.js","shared/store/index.js","shared/store/sagas/index.js","reportWebVitals.js","index.js"],"names":["SIGN_IN","INCREMENT","DECREMENT","globalUserState","state","user","globalWeatherState","createSelector","data","loaded","weather","getWeatherDataSelector","getWeatherLoadedSelector","userConstant","LOAD_USER","LOAD_USER_SUCCESS","LOAD_USER_FAIL","userActions","loadUserAction","payload","type","loadUserSuccessAction","loadUserFailAction","weatherConstant","LOAD_WEATHER_API","LOAD_WEATHER_API_SUCCESS","LOAD_WEATHER_API_FAIL","weatherActions","loadWeatherApiAction","loadWeatherApiSuccessAction","loadWeatherApiFailAction","Button","styled","button","_templateObject","_taggedTemplateLiteral","CitySubmit","div","props","visible","invalid","WeatherInformation","p","BackgroundImage","CardWrapper","HomePage","dispatch","useDispatch","cityName","setCityName","useState","isValid","setIsValid","isVisible","setIsVisible","weatherData","useSelector","weatherLoaded","_jsx","_Fragment","children","_jsxs","value","placeholder","onChange","e","target","trim","length","onClick","city","name","Math","trunc","list","main","temp","description","App","className","counterReducer","initialState","arguments","undefined","loggedReducer","INITIAL_STATE","id","age","loading","loadFail","userReducer","action","weatherReducer","rootReducer","combineReducers","counter","isLogged","loadUser","response","success","put","error","userWatcherSaga","takeLatest","LocalStorageService","_service","getService","this","setToken","tokenObj","localStorage","setItem","access_token","refresh_token","getAccessToken","getItem","getRefreshToken","clearToken","removeItem","localStorageService","axios","interceptors","request","use","config","token","headers","Promise","reject","async","originalRequest","status","url","_retry","res","post","defaults","common","getWeatherData","get","concat","cityname","loadWeather","call","weatherWatcherSaga","sagaMiddleware","createSagaMiddleware","middleware","store","createStore","composeWithDevTools","applyMiddleware","run","all","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","React","StrictMode","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.b42fb3e5.chunk.js","sourcesContent":["export const SIGN_IN = \"SIGN_IN\";\nexport const INCREMENT = \"INCREMENT\";\nexport const DECREMENT = \"DECREMENT\";\n","import { createSelector } from \"reselect\";\n\nexport const globalUserState = (state) => state.user;\n\nexport const getUserDataSelector = createSelector(\n  globalUserState,\n  (user) => user.data\n);\n\nexport const getUserLoadedSelector = createSelector(\n  globalUserState,\n  (user) => user.loaded\n);\n","import { createSelector } from \"reselect\";\n\nexport const globalWeatherState = (state) => state.weather;\n\nexport const getWeatherDataSelector = createSelector(\n    globalWeatherState,\n    weather => weather.data);\n\nexport const getWeatherLoadedSelector = createSelector(\n    globalWeatherState,\n    weather => weather.loaded\n);","export const userConstant = {\n  LOAD_USER: \"LOAD_USER\",\n  LOAD_USER_SUCCESS: \"LOAD_USER_SUCCESS\",\n  LOAD_USER_FAIL: \"LOAD_USER_FAIL\",\n};\n","import { userConstant } from \"../constants/user.constant\";\n\nconst loadUserAction = (payload) => ({\n  type: userConstant.LOAD_USER,\n  payload,\n});\n\nconst loadUserSuccessAction = (payload) => ({\n  type: userConstant.LOAD_USER_SUCCESS,\n  payload,\n});\n\nconst loadUserFailAction = () => ({\n  type: userConstant.LOAD_USER_FAIL,\n});\n\nexport const userActions = {\n  loadUserAction,\n  loadUserSuccessAction,\n  loadUserFailAction,\n};\n","export const weatherConstant = {\n  LOAD_WEATHER_API: \"LOAD_WEATHER_API\",\n  LOAD_WEATHER_API_SUCCESS: \"LOAD_WEATHER_API_SUCCESS\",\n  LOAD_WEATHER_API_FAIL: \"LOAD_WEATHER_API_FAIL\",\n};\n","import { weatherConstant } from \"../constants/weather.constant\";\n\nconst loadWeatherApiAction = (payload) => ({\n  type: weatherConstant.LOAD_WEATHER_API,\n  payload,\n});\n\nconst loadWeatherApiSuccessAction = (payload) => ({\n  type: weatherConstant.LOAD_WEATHER_API_SUCCESS,\n  payload,\n});\n\nconst loadWeatherApiFailAction = () => ({\n  type: weatherConstant.LOAD_WEATHER_API_FAIL,\n});\n\nexport const weatherActions = {\n  loadWeatherApiAction,\n  loadWeatherApiSuccessAction,\n  loadWeatherApiFailAction,\n};\n","import styled from 'styled-components';\n\nconst Button = styled.button`\n  width : 25%;\n  min-width: 200px;\n  font: inherit;\n  padding: 0.5rem 1.5rem;\n  border: 1px solid #7d0d0d;  \n  border-radius: 6px;\n  color: white;\n  background: #7d0d0d;\n  box-shadow: 0 0 4px rgba(0, 0, 0, 0.26);\n  cursor: pointer;\n  margin-top: 20px;\n  \n\n &:focus {\n   outline: none;\n }\n\n &:hover,\n &:active {\n   background: #b92525;\n   border-color: #b92525;\n   box-shadow: 0 0 8px rgba(0, 0, 0, 0.26);\n }\n `;\n\nexport default Button;","import styled from \"styled-components\";\n\nconst CitySubmit = styled.div`\npadding-top: 17rem;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nflex-flow: column nowrap;\n\n& div {\n  display: ${props => props.visible ? 'none' : ''}\n}\n\n& input {\n  width: 30%;\n  min-width: 200px;\n  border: 2px solid ${props => props.invalid ? 'red' : '#ccc'};\n  background: ${props => props.invalid ? '#d4a7a7' : '#ff9500'};\n  font: inherit;\n  line-height: 1.5rem;\n  padding: 0 0.25rem;\n  border-radius: 4px;\n  color: white;\n}\n\n\n\n& input:focus {\n  outline: none;\n  background: #e2913c;\n  border-color: #a76a69;\n}\n`;\n\nexport default CitySubmit;\n","import styled from \"styled-components\";\n\nconst WeatherInformation = styled.p`\nfont-size:16px;\n& span {\n    font-weight: bold;\n    color: #25223e;\n}\n`\n\nexport default WeatherInformation;","import styled from \"styled-components\";\n\nconst BackgroundImage = styled.div`\n\n  width: 100%;\n  height: 100vh;\n  background: url(\"https://images.unsplash.com/photo-1567304441104-d7a7d3e4bc1b?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=2849&q=80\");\n  background-repeat: no-repeat;\n  background-size: cover;\n`;\n\nexport default BackgroundImage;","import styled from \"styled-components\";\n\nconst CardWrapper = styled.div`\n  width: 30%;\n  height: 50%;\n  border-radius: 12px;\n  box-shadow: 0 1px 8px rgba(0, 0, 0, 0.25);\n  margin-top: 20px;\n  background: #e6d9c3;\n  opacity: 0.7;\n`\n\nexport default CardWrapper;","import { React, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  increment,\n  decrement,\n  loggedIn,\n} from \"../../shared/store/actions/counter.action\";\nimport {\n  getUserDataSelector,\n  getUserLoadedSelector,\n} from \"../../shared/store/selectors/user.selector\";\nimport {\n  getWeatherDataSelector, getWeatherLoadedSelector\n} from \"../../shared/store/selectors/weather.selector\";\nimport { userActions } from \"../../shared/store/actions/user.action\";\nimport { weatherActions } from \"../../shared/store/actions/weather.action\";\nimport Button from \"./styled/Button\";\nimport CitySubmit from \"./styled/CitySubmit\";\nimport WeatherInformation from \"./styled/WeatherInformation\";\nimport BackgroundImage from \"./styled/BackgroundImage\";\nimport CardWrapper from \"./styled/CardWrapper\";\n\nconst HomePage = () => {\n  // const counter = useSelector((state) => state.counter);\n  // const isLogged = useSelector((state) => state.isLogged);\n  //const weatherData = useSelector((state) => state.weather);\n  //const userData = useSelector((state) => state.user.data);\n  const dispatch = useDispatch();\n  const [cityName, setCityName] = useState('');\n  const [isValid, setIsValid] = useState(true);\n  const [isVisible, setIsVisible] = useState(false);\n\n  // const userData = useSelector(getUserDataSelector);\n  // const userLoaded = useSelector(getUserLoadedSelector);\n  const weatherData = useSelector(getWeatherDataSelector);\n  const weatherLoaded = useSelector(getWeatherLoadedSelector);\n\n\n  const changeHandler = (e) => {\n    setCityName(e.target.value);\n    if (cityName.trim().length > 0) {\n      setIsValid(true);\n      setIsVisible(!isVisible);\n    }\n  }\n\n  const loadWeather = (city) => {\n    dispatch(weatherActions.loadWeatherApiAction(cityName));\n    if (cityName.trim().length === 0) {\n      setIsValid(false);\n      return;\n    }\n    setCityName('');\n  };\n\n  // const loadUser = () => {\n  //   dispatch(userActions.loadUserAction());\n  //   setIsVisible(!isVisible);\n  // };\n\n\n  return (\n    <>\n      <BackgroundImage>\n        <CitySubmit invalid={!isValid}>\n          <input type='text' value={cityName} placeholder='Please type a city name' onChange={changeHandler}></input>\n          <Button onClick={loadWeather}>Show me the weather forecast</Button>\n          {weatherLoaded ? (\n            <CardWrapper>\n              <WeatherInformation><span>City:</span> {weatherData.city.name}</WeatherInformation>\n              <WeatherInformation><span>Temp: </span>{Math.trunc(weatherData.list[0].main.temp)} &deg;C</WeatherInformation>\n              <WeatherInformation><span>Description: </span>{weatherData.list[0].weather[0].description}</WeatherInformation>\n\n            </CardWrapper>\n          ) : (<></>)}\n        </CitySubmit>\n\n        {/* <Button onClick={loadUser}>Click me to see the counter and a name!</Button>\n      {userLoaded ? (\n        <>\n          <p>{userData.name}</p>\n          <h1>This is my counter: {counter}</h1>\n          <Button onClick={() => dispatch(increment())}>+</Button>\n          <Button onClick={() => dispatch(decrement())}>-</Button>\n          <Button onClick={() => dispatch(loggedIn())}>Click to log in!</Button>\n          {isLogged ? <p>You are logged in!</p> : \"\"}\n        </>\n      ) : (\n        <></>\n      )} */}\n      </BackgroundImage>\n    </>\n  );\n};\n\nexport default HomePage;\n","import React from \"react\";\nimport \"./App.css\";\nimport HomePage from \"./pages/home\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <HomePage />\n    </div>\n  );\n}\n\nexport default App;\n","import { INCREMENT, DECREMENT } from \"../constants/counter.constant\";\nconst counterReducer = (initialState = 0, action) => {\n  switch (action.type) {\n    case INCREMENT:\n      return initialState + 1;\n    case DECREMENT:\n      return initialState - 1;\n    default:\n      return initialState;\n  }\n};\n\nexport default counterReducer;\n","import { SIGN_IN } from \"../constants/counter.constant\";\nconst loggedReducer = (state = false, action) => {\n  switch (action.type) {\n    case SIGN_IN:\n      return !state;\n    default:\n      return state;\n  }\n};\n\nexport default loggedReducer;\n","import { userConstant } from \"../constants/user.constant\";\n\nconst INITIAL_STATE = {\n  data: {\n    id: null,\n    name: \"Joe\",\n    age: \"30\",\n  },\n  loading: false,\n  loaded: false,\n  loadFail: false,\n};\n\nconst userReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case userConstant.LOAD_USER:\n      return {\n        ...state,\n        loading: true,\n        loaded: false,\n        loadFail: false,\n      };\n    case userConstant.LOAD_USER_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        loaded: true,\n        loadFail: false,\n        data: action.payload,\n      };\n    case userConstant.LOAD_USER_FAIL:\n      return {\n        ...state,\n        loading: false,\n        loaded: false,\n        loadFail: true,\n      };\n    default:\n      return {\n        ...state,\n      };\n  }\n};\n\nexport default userReducer;\n","import { weatherConstant } from \"../constants/weather.constant\";\n\nconst INITIAL_STATE = {\n    data: {},\n    loading: false,\n    loaded: false,\n    loadFail: false,\n};\n\nconst weatherReducer = (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case weatherConstant.LOAD_WEATHER_API:\n            return {\n                ...state,\n                loading: true,\n                loaded: false,\n                loadFail: false,\n            };\n        case weatherConstant.LOAD_WEATHER_API_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                loaded: true,\n                loadFail: false,\n                data: action.payload,\n            };\n        case weatherConstant.LOAD_WEATHER_API_FAIL:\n            return {\n                ...state,\n                loading: false,\n                loaded: false,\n                loadFail: true,\n            };\n        default:\n            return {\n                ...state,\n            };\n    }\n};\n\nexport default weatherReducer;\n","import counterReducer from \"./counter.reducer\";\nimport loggedReducer from \"./isLogged.reducer\";\nimport userReducer from \"./user.reducer\";\nimport weatherReducer from \"./weather.reducer\";\nimport { combineReducers } from \"redux\";\n\nconst rootReducer = combineReducers({\n  counter: counterReducer,\n  isLogged: loggedReducer,\n  user: userReducer,\n  weather: weatherReducer,\n});\n\nexport default rootReducer;\n","import { put, takeLatest } from \"redux-saga/effects\";\nimport { userActions } from \"../actions/user.action\";\nimport { userConstant } from \"../constants/user.constant\";\n\nfunction* loadUser(action) {\n  try {\n    // const response = yield call(userService.loadUser, action.payload);\n    // () => {\n    //     return {\n    //         user: 1,\n    //         name: 'irem',\n    //         success: true,\n    //     };\n    // }\n    const response = {\n      data: {\n        id: 1,\n        name: \"John\",\n        age: \"35\",\n      },\n      success: true,\n    };\n    if (!response.success) {\n      yield put(userActions.loadUserFailAction());\n    } else {\n      yield put(userActions.loadUserSuccessAction(response.data));\n    }\n  } catch (error) {\n    yield put(userActions.loadUserFailAction());\n  }\n}\n\nexport function* userWatcherSaga() {\n  yield takeLatest(userConstant.LOAD_USER, loadUser);\n}\n","\nconst LocalStorageService = (function () {\n    var _service;\n    function _getService() {\n        if (!_service) {\n            _service = this;\n            return _service\n        }\n        return _service\n    }\n    function _setToken(tokenObj) {\n        localStorage.setItem('access_token', tokenObj.access_token);\n        localStorage.setItem('refresh_token', tokenObj.refresh_token);\n    }\n    function _getAccessToken() {\n        return localStorage.getItem('access_token');\n    }\n    function _getRefreshToken() {\n        return localStorage.getItem('refresh_token');\n    }\n    function _clearToken() {\n        localStorage.removeItem('access_token');\n        localStorage.removeItem('refresh_token');\n    }\n    return {\n        getService: _getService,\n        setToken: _setToken,\n        getAccessToken: _getAccessToken,\n        getRefreshToken: _getRefreshToken,\n        clearToken: _clearToken\n    }\n})();\nexport default LocalStorageService;","import axios from \"axios\";\nimport LocalStorageService from \"./localStorage.service\";\n//import router from \"./router/router\";\n\n\nconst baseUrl =\n  \"https://api.openweathermap.org/data/2.5/forecast?q=\";\nconst API_KEY = \"209681e4c06f24f06f8d7496ce90e792\";\n\nconst getWeatherData = async (cityname) => {\n  const response = await axios.get(`${baseUrl}${cityname}&units=metric&appid=${API_KEY}`);\n  return response;\n};\n// LocalstorageService\nconst localStorageService = LocalStorageService.getService();\n\n// Add a request interceptor\naxios.interceptors.request.use((config) => {\n  const token = localStorageService.getAccessToken();\n  if (token) {\n    config.headers['Authorization'] = 'Bearer ' + token;\n  }\n  config.headers['Content-Type'] = 'application/json';\n  return config;\n},\n  error => {\n    Promise.reject(error)\n  });\n\n\n// Add a response interceptor\naxios.interceptors.response.use((response) => {\n  return response;\n}, async function (error) {\n  // Any status codes that falls outside the range of 2xx cause this function to trigger\n  const originalRequest = error.config;\n  if (error.response.status === 401 && originalRequest.url ===\n    'http://192.168.1.27:3001/v1/auth/token') {\n    //router.push('/login');\n    return Promise.reject(error);\n  }\n  if (error.response.status === 401 && !originalRequest._retry) {\n\n    originalRequest._retry = true;\n    const res = await axios.post('/auth/token',\n      {\n        \"refresh_token\": localStorageService.getRefreshToken()\n      });\n    if (res.status === 201) {\n      // 1) put token to LocalStorage\n      localStorageService.setToken(res.data);\n\n      // 2) Change Authorization header\n      axios.defaults.headers.common['Authorization'] = 'Bearer ' + localStorageService.getAccessToken();\n\n      // 3) return originalRequest object with Axios.\n      return axios(originalRequest);\n    }\n  }\n  // return Error object with Promise\n  return Promise.reject(error);\n});\n\n\nexport default getWeatherData;\n\n\n\n\n","import { call, put, takeLatest } from \"redux-saga/effects\";\nimport { weatherActions } from \"../actions/weather.action\";\nimport { weatherConstant } from \"../constants/weather.constant\";\nimport getWeatherData from \"../services/weather.service\";\n\nfunction* loadWeather(action) {\n    try {\n        const response = yield call(getWeatherData, action.payload);\n        if (!response) {\n            yield put(weatherActions.loadWeatherApiFailAction());\n        } else {\n            yield put(weatherActions.loadWeatherApiSuccessAction(response.data));\n        }\n    } catch (error) {\n        yield put(weatherActions.loadWeatherApiFailAction());\n    }\n}\n\nexport function* weatherWatcherSaga() {\n    yield takeLatest(weatherConstant.LOAD_WEATHER_API, loadWeather);\n}\n","import { createStore, applyMiddleware } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nimport rootReducer from \"./reducers\";\nimport mySaga from \"./sagas\";\n\n// create the saga middleware\nconst sagaMiddleware = createSagaMiddleware();\nconst middleware = [sagaMiddleware];\n\n// mount it on the Store\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\n// then run the saga\nsagaMiddleware.run(mySaga);\n\nexport default store;\n","import { all } from \"redux-saga/effects\";\nimport { userWatcherSaga } from \"./user.saga\";\nimport { weatherWatcherSaga } from \"./weather.saga\";\n\nexport default function* mySaga() {\n  yield all([userWatcherSaga(), weatherWatcherSaga()]);\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./shared/store\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}